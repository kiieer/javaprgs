package com.revature.emp.main;

import com.revature.emp.ContractualEmployee;
import com.revature.emp.SalariedEmployee;

public class EmployeeManager {
public static void main(String[] args) {
	SalariedEmployee se = new SalariedEmployee(); //creating an object thru the default constructor 
	se.setId(101);
	se.setName("Kiersten"); //instead of hard coding the values	
	se.setDept("IT - Training"); //we can use cl - argues or scanner class for input

System.out.println("Id   = " + se.getId() + "\nName = " + se.getName() + "\nDept = " + se.getDept());

SalariedEmployee se1 = new SalariedEmployee(102, "Jaunzel", "Training"); //parameterized constructor
System.out.println("\nId   = " + se1.getId() + "\nName = " + se1.getName() + "\nDept = " + se1.getDept());

ContractualEmployee ce = new ContractualEmployee(); //creating an object thru the default constructor 
ce.setId(131);
ce.setName("Erin"); //instead of hard coding the values	
ce.setDept("Training"); //we can use cl - argues or scanner class for input
ce.setHoursLogged(40);

System.out.println("Id   = " + ce.getId() + "\nName = " + ce.getName() + "\nDept = " + ce.getDept() + "\nHours = " + ce.getHoursLogged());

ContractualEmployee ce1 = new ContractualEmployee(321, "Mitchell", "Training", 40); //parameterized constructor
System.out.println("Id   = " + ce1.getId() + "\nName = " + ce1.getName() + "\nDept = " + ce1.getDept() + "\nHours = " + ce1.getHoursLogged());


}
}
